{"version":3,"sources":["deploy.js"],"names":["_defaultInitScript","join","Deploy","args","mandatoryFields","mandatoryOneFields","fd","hdlUtil","getDeepVal","Error","isMandatoryOneOk","leafFolderName","initScript","Q","resolve","destFolderPath","author","promise","rsv","rej","rst","regex2","RegExp","replace","regex","filePath","fs","existsSync","unlink","err","console","error","folderPath","options","_L","endsWith","Path","sep","slice","length","zipPath","trim","code","srcFolderPath","privateKeyPath","host","port","username","password","lastSlashIdx","lastIndexOf","zipFileName","parentFolderPath","destPathSep","indexOf","parentDestFolderPath","destFilePath","localBashFilePath","__dirname","_this","rsvRoot","rejRoot","removeFilePromise","then","zipFolderHandler","reject","msg","readFile","feed","ssh","NodeSSH","sshOptions","privateKey","sshOptionsCopy","connect","putFile","getInitScriptPromise","writeFile","encoding","mode","flag","remoteBashFilePath","execCommand","cwd","qAll","push","all","dispose","done","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable arrow-parens */\nimport Path from 'path'\nimport fs from 'fs'\nimport Q from 'q';\nimport zipFolder from 'zip-folder';\nimport _L from 'lodash';\nimport hdlUtil from './helpers/hdlUtil';\nimport { NodeSSH } from 'node-ssh'\n\nconst _defaultInitScript = [\n    '#!/bin/bash',\n    '# author: WangFan',\n    '# description: backup server directory',\n    'time1=$(date +\"%Y-%m-%dT%H-%M-%S\")',\n    'str1=\\'server.\\'',\n    'str2=\\'改前.tar.gz\\'',\n    'time2=$str1$time1$str2',\n    'tar -czvf $time2 server &&',\n    'unzip -o server.zip -d ${destFolderPath} &&',\n    'rm -f server.zip &',\n    'nohup forever stop index.js &',\n    'forever start -o nohup.out -e nohup.out index.js'\n    ].join('\\n');\n\nclass Deploy {\n    constructor (args = {}) {\n        const mandatoryFields = ['author', 'srcFolderPath', 'destFolderPath', 'host', 'username'];\n        const mandatoryOneFields = ['privateKeyPath', 'password']\n        // const optionalFields = ['initScript'];\n        for(let fd of mandatoryFields){\n            if(!hdlUtil.getDeepVal(args, fd)){\n                throw new Error(`mandatory field \"${fd}\" is missing`);\n            }\n        }\n        let isMandatoryOneOk = false; // 二选一\n        for(let fd of mandatoryOneFields){\n            if(hdlUtil.getDeepVal(args, fd)){\n                isMandatoryOneOk = true;\n                break;\n            }\n        }\n        if(!isMandatoryOneOk){\n            throw new Error(`mandatory field \"privateKeyPath / password\" is missing`);\n        }\n        this.args = args;\n    }\n\n    getInitScriptPromise (leafFolderName) {\n        if ( this.args.initScript ) {\n            return Q.resolve(this.args.initScript);\n        }\n        const destFolderPath = this.args.destFolderPath;\n        const author = this.args.author;\n        return Q.promise((rsv, rej) => {\n            /* const bashFilePath = Path.resolve(__dirname, 'helpers/backupServer.sh');\n            fs.readFile(bashFilePath, 'utf8', (err, rst) => {\n                if (err) {\n                    return rej(err);\n                } */\n                let rst = _defaultInitScript;\n                if(author){\n                    const regex2 = new RegExp('改前');\n                    rst = rst.replace(regex2, `.${author}.backup`);\n                }\n                rst = rst.replace(/\\$\\{destFolderPath\\}/g, destFolderPath);\n                if(!leafFolderName || leafFolderName === 'server'){\n                    return rsv(rst);\n                }else{\n                    const regex = new RegExp('server', 'g');\n                    rst = rst.replace(regex, leafFolderName);\n                    rsv(rst);\n                }\n            // })\n        })\n    }\n\n    removeFilePromise (filePath) {\n        return Q.promise((rsv/* , rej */) => {\n            // eslint-disable-next-line no-sync\n            if (!fs.existsSync(filePath)) {\n                return rsv(`removeFilePromise #111 not found: ${filePath}`);\n            }\n            fs.unlink(filePath, function (err) {\n                if (err) {\n                    console.error('removefilePromise #27', err);\n                }\n                rsv(filePath);\n            });\n        })\n    }\n    \n    /** \n     * @param {String} folderPath the path of folder to be zipped\n     * @param {String} options options.deleteFolder Y 压缩后删除文件 \n     * @returns {String} zipPath\n     * */\n    zipFolderHandler (folderPath, options = {}) {\n        if (_L.endsWith(folderPath, Path.sep)) {\n            folderPath = folderPath.slice(0, folderPath.length - 1);\n        }\n        const zipPath = _L.trim(hdlUtil.getDeepVal(options, 'zipPath') || `${folderPath}.zip`);\n        return Q.promise(function (rsv, rej) {\n            // eslint-disable-next-line no-sync\n            if (!fs.existsSync(folderPath)) {\n                return rsv({ code: 113 });\n            }\n            zipFolder(folderPath, zipPath, err => {\n                if (err) {\n                    rej(err)\n                } else {\n                    rsv({ code: 111, zipPath });\n                }\n            });\n        });\n    }\n\n    exec () {\n        const { srcFolderPath, destFolderPath, privateKeyPath, host, port = 22, username, password } = this.args;\n        let lastSlashIdx = srcFolderPath.lastIndexOf(Path.sep);\n        if (lastSlashIdx === srcFolderPath.length - 1) {\n            lastSlashIdx = srcFolderPath.slice(0, -1).lastIndexOf(Path.sep);\n        }\n\n        let leafFolderName = srcFolderPath.slice(lastSlashIdx + 1);\n        if(hdlUtil.endsWith(leafFolderName, Path.sep)){\n            leafFolderName = leafFolderName.slice(0, leafFolderName.length - 1);\n        }\n        const zipFileName = `${leafFolderName}.zip`;\n\n        const parentFolderPath = srcFolderPath.slice(0, lastSlashIdx);\n        const zipPath = Path.resolve(parentFolderPath, zipFileName);\n\n        let destPathSep;\n        if(destFolderPath.indexOf('/') !== 0 || destFolderPath.slice(0, 4).indexOf(':') > 0){\n            destPathSep = '\\\\';\n        }else{\n            destPathSep = '/';\n        }\n        lastSlashIdx = destFolderPath.lastIndexOf(destPathSep);\n        if (lastSlashIdx === destFolderPath.length - 1) {\n            lastSlashIdx = destFolderPath.slice(0, -1).lastIndexOf(destPathSep);\n        }\n        const parentDestFolderPath = destFolderPath.slice(0, lastSlashIdx);\n        const destFilePath = `${parentDestFolderPath}${destPathSep}${zipFileName}`; // Path.resolve(parentDestFolderPath, zipFileName);\n        const localBashFilePath = Path.resolve(__dirname, '.backupServer.sh');\n        const _this = this;\n        return Q.promise((rsvRoot, rejRoot) => {\n            (() => {\n                // eslint-disable-next-line no-sync\n                if(fs.existsSync(zipPath)){\n                    return this.removeFilePromise (zipPath);\n                }else{\n                    return Q.resolve(null);\n                }\n            })().then(() => {\n                return this.zipFolderHandler(srcFolderPath, { zipPath });\n            }).then(() => {\n                if(!privateKeyPath || !fs.existsSync(privateKeyPath)){\n                    if(password){\n                        return null;\n                    }else{\n                        return Q.reject({code: 110, msg: 'no password'});\n                    }\n                }\n                return Q.promise((rsv, rej) => {\n                    fs.readFile(privateKeyPath, 'utf8', (err, rst) => {\n                        if (err) {\n                            return rej(err);\n                        }\n                        rsv(rst);\n                    })\n                })\n            }).then(( feed ) => {\n                _this.ssh = new NodeSSH();\n                const sshOptions = {\n                    host,\n                    port,\n                    username\n                }\n                if(feed){\n                    sshOptions.privateKey = feed;\n                }else{\n                    sshOptions.password = password;\n                }\n                const sshOptionsCopy = { ...sshOptions };\n                delete sshOptionsCopy.privateKey;\n                return _this.ssh.connect(sshOptions);\n            }).then(() => {\n                return Q.promise((rsv, rej) => {\n                    _this.ssh.putFile(zipPath, destFilePath).then(function () {\n                        rsv({ destFilePath, msg: 'OK', zipPath });\n                    }, function (error) {\n                        rej(error);\n                    })\n                })\n            /* }).then(function () {\n                return Q.promise((rsv, rej) => {\n                    _this.ssh.exec('ls', ['-l', zipFileName], {\n                        cwd: parentDestFolderPath,\n                        onStdout (chunk) {\n                            const str = chunk.toString('utf8');\n                            console.log('#108 stdoutChunk:', str)\n                            rsv(str)\n                        },\n                        onStderr (chunk) {\n                            const str = chunk.toString('utf8');\n                            console.log('#113 stderrChunk:', str)\n                            rej(str);\n                        }\n                    })\n                }) */\n            }).then(() => {\n                return this.getInitScriptPromise(leafFolderName);\n            }).then(feed => {\n                return Q.promise((rsv, rej) => {\n                    fs.writeFile(localBashFilePath, feed, { encoding: 'utf8', mode: 0o644, flag: 'w' }, (err, rst) => {\n                        if(err){\n                            rej(err);\n                        }else{\n                            rsv(rst);\n                        }\n                    });\n                })\n            }).then(() => {\n                const remoteBashFilePath = `${parentDestFolderPath}${destPathSep}backupServer.sh`; // Path.resolve(parentDestFolderPath, 'backupServer.sh');\n                return Q.promise((rsv, rej) => {\n                    _this.ssh.putFile(localBashFilePath, remoteBashFilePath).then(function () {\n                        rsv({ destFilePath, msg: 'OK', zipPath });\n                    }, function (error) {\n                        rej(error);\n                    })\n                })\n            }).then(() => {\n                return _this.ssh.execCommand('chmod +x backupServer.sh', { cwd: parentDestFolderPath })\n            }).then(() => {\n                return _this.ssh.execCommand('./backupServer.sh', { cwd: parentDestFolderPath });\n            }).then(() => {\n                const qAll = [];\n                qAll.push( this.removeFilePromise(zipPath) );\n                qAll.push( this.removeFilePromise(localBashFilePath) );\n                return Q.all(qAll);\n            })/* .then(() => {\n                const deferred = Q.defer();\n                setTimeout(function(){deferred.resolve()}, 10000);\n                return deferred.promise;\n            }) */.then(() => {\n                _this.ssh.dispose();\n                rsvRoot({code: 111, msg: 'OK'});\n            }).done(null, err => {\n                if (!err) {\n                    return;\n                }\n                console.error('#75', err);\n                rsvRoot({code: 110, msg: 'ERROR'});\n            })\n        })\n    }\n\n}\nmodule.exports = Deploy;"],"file":"deploy.js"}