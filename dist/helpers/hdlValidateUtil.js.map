{"version":3,"sources":["helpers/hdlValidateUtil.js"],"names":["_isIDCard1","_isIDCard2","_isPrcIdCard","_objectIdRegExp","module","exports","isPrcIdCard","str","test","_isMobile","isMobile","_isEmailRegex","isEmail","isValidPassport","toUpperCase","regex","bool","isValidObjectID","bin2hex","result","i","length","c","charCodeAt","byte2Hex","b","toString","isChnChar","singleStr","isIpAddress","strict","_isIpRegExp","_isIpRegExp2","isImageUrl","url","qmIdx","indexOf","urlWithoutQuery","substring","isValidHttpLink","dhost"],"mappings":"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","sourcesContent":["/**\n * Created by WangFan on 2015-07-09\n */\n//身份证正则表达式(15位)\n// eslint-disable-next-line no-unused-vars\nconst _isIDCard1=/^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$/;\n\n//身份证正则表达式(18位)\n// eslint-disable-next-line no-unused-vars\nconst _isIDCard2=/^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$/;\n\n// 中华人民共和国身份证正则合并\nvar _isPrcIdCard = /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/;\n\n// mongodb ObjectId\nvar _objectIdRegExp = /^[0-9a-fA-F]{24,}$/i;\n\nmodule.exports.isPrcIdCard = function(str){\n    if(typeof str != 'string'){\n        return false;\n    }\n    return _isPrcIdCard.test(str);\n};\n\nvar _isMobile = /^1[3|4|5|7|8]\\d{9}$/;\n//var _isMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\n\nmodule.exports.isMobile = function(str){\n    if(typeof str != 'string'){\n        return false;\n    }\n    return _isMobile.test(str);\n};\n\nvar _isEmailRegex = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\nmodule.exports.isEmail = function(str){\n    if(typeof str != 'string'){\n        return false;\n    }\n    return _isEmailRegex.test(str);\n};\n\nmodule.exports.isValidPassport = function(str){\n    if(!str){\n        return str;\n    }\n    str = str.toUpperCase();\n    var regex = /(P\\d{7}$)|((E|G)\\d{8}$)/;\n    var bool = regex.test(str);\n    if(!bool){\n        regex = /E\\w\\d{7}$/;\n        bool = regex.test(str);\n    }\n    return bool;\n};\n\n/** test whether the mongodb Object ID is valid */\nmodule.exports.isValidObjectID = function(str){\n    if(!str){\n        return false;\n    }\n    return _objectIdRegExp.test(str);\n};\n\nfunction bin2hex(str) {\n    var result = \"\";\n    for (let i = 0; i < str.length; i++ ) {\n        var c = str.charCodeAt(i);\n        result += byte2Hex(c>>8 & 0xff); // 高字节\n        result += byte2Hex(c & 0xff);\t// 低字节\n    }\n    return result;\n}\nmodule.exports.bin2hex = bin2hex;\n\nfunction byte2Hex(b) {\n    if(b < 0x10)\n        return \"0\" + b.toString(16);\n    else\n        return b.toString(16);\n}\nmodule.exports.byte2Hex = byte2Hex;\n\n/* function bin2hex(str) {\n    var result = \"\";\n    for (i = 0; i < str.length; i++ ) {\n        result += int16_to_hex(str.charCodeAt(i));\n    }\n    return result;\n}\nmodule.exports.bin2hex = bin2hex;\n\nfunction int16_to_hex(i) {\n    var result = i.toString(16);\n    var j = 0;\n    while (j+result.length < 4){\n        result = \"0\" + result;\n        j++;\n    }\n    return result;\n}\nmodule.exports.int16_to_hex = int16_to_hex; */\n\n/** 判断单个字符是否是中文字符 */\nmodule.exports.isChnChar = function(singleStr){\n    if(/[\\u4e00-\\u9fa5]{1}/.test(singleStr) || (/[\\uFF08-\\uFF09]{1}/.test(singleStr)) || (/[\\u3010-\\u3011]{1}/.test(singleStr))){\n        return true;\n    }else{\n        return false;\n    }\n};\n\nmodule.exports.isIpAddress = function(str, strict){\n    var _isIpRegExp = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;\n    var _isIpRegExp2 = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])/;\n    if(strict){\n        return _isIpRegExp.test(str);\n    }else{\n        return _isIpRegExp2.test(str);\n    }\n}\n\nmodule.exports.isImageUrl = function(url){\n    if(typeof url !== 'string'){\n        return false;\n    }\n    const qmIdx = url.indexOf('?');\n    let urlWithoutQuery = url;\n    if(qmIdx > -1){\n        urlWithoutQuery = url.substring(0, qmIdx);\n    }\n    var regex = /\\.(jpg|png|jpeg|gif|tif|tiff)$/\n    return regex.test(urlWithoutQuery);\n}\n\nmodule.exports.isValidHttpLink = (dhost) => {\n    return /^http[s]?:\\/\\//.test(dhost)\n}"],"file":"hdlValidateUtil.js"}