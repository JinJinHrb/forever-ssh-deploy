{"version":3,"sources":["helpers/fsUtil.js"],"names":["Q","require","hdlUtil","fs","Path","COPYFILE_EXCL","constants","getFileSeparator","filePath","regex","RegExp","test","mkdirSync","url","mode","cb","fileSeparator","arr","split","shift","splice","inner","cur","existsSync","length","module","exports","copyFilePromise","oldPath","newPath","options","promise","rsv","rej","callback","err","overwrite","copyFile","call","listStatsPromise","folderPath","filterHandler","rsv_root","rej_root","fileNames","readdir","rsp","then","feed","reject","q_all","map","elem","sep","stat","all","now","Date","forEach","i","birthtime","life","getTimeGap","fname","isFile","isDirectory","isSymbolicLink","Function","filter","listFilteredFilesPromise","isRecur","recurHandler","subFolderPath","stats","depth","results","sameLevel","nextLevel","a","push","resolve","absPath","nextFolderPath","done","rsvRoot","rejRoot","copyFilteredFilesPromise","hours","tmpFolderPath","mtime","folderName","basename","parentFolderPath","dirname","b","destPath","replace","qAll","dir","modFiles","console","log","error"],"mappings":"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","sourcesContent":["// import Q from 'q';\n// import hdlUtil from './hdlUtil';\n// import _L from 'lodash';\n// import fs from 'fs';\n// import Path from \"path\";\n\nconst Q = require('q');\nconst hdlUtil = require('./hdlUtil');\n// const _L = require('lodash');\nconst fs = require('fs');\nconst Path = require('path');\n\nconst {COPYFILE_EXCL} = fs.constants;\n\nconst getFileSeparator = (filePath) => {\n    if(!filePath){\n        filePath = '';\n    }\n    const regex = new RegExp('^[C-Z]:\\\\\\\\');\n    if(regex.test(filePath)){\n        return '\\\\';\n    }else{\n        return '/';\n    }\n}\n\n/** \n * 创建文件夹\n * @param url\n * @param mode\n * cb 调用时不传\n */\nconst mkdirSync = function(url, mode, cb){\n    const fileSeparator = getFileSeparator(url);\n    var arr = url.split(fileSeparator);\n    mode = mode || 0o755;\n    cb = cb || function(){};\n    if(arr[0]===\".\"){ // 处理 ./aaa\n        arr.shift();\n    }\n    if(arr[0] === \"..\"){ // 处理 ../ddd/d\n        arr.splice(0,2,arr[0]+ fileSeparator +arr[1])\n    }\n    function inner(cur){\n        if(cur && !fs.existsSync(cur)){ // 不存在就创建一个\n            fs.mkdirSync(cur, mode)\n        }\n        if(arr.length){\n            inner(cur + fileSeparator +arr.shift());\n        }else{\n            cb();\n        }\n    }\n    arr.length && inner(arr.shift());\n}\nmodule.exports.mkdirSync = mkdirSync;\n\n/** \n * options.overwrite: \"Y\", No error will be reported\n */\nconst copyFilePromise = (oldPath, newPath, options={}) => {\n    return Q.promise((rsv, rej) => {\n        const callback = function(err){\n            if(err){\n                rej(err)\n            }else{\n                rsv(null)\n            }\n        }\n        if(options.overwrite === 'Y'){\n            fs.copyFile.call(this, oldPath, newPath, callback);\n        }else{\n            fs.copyFile.call(this, oldPath, newPath, COPYFILE_EXCL, callback);\n        }\n    })\n}\nmodule.exports.copyFilePromise = copyFilePromise;\n\nconst listStatsPromise = (folderPath, filterHandler) => {\n    return Q.promise((rsv_root, rej_root) => {\n        let fileNames = [];\n        Q.promise(function(rsv, rej){\n            fs.readdir(folderPath, function(err, rsp){\n                if(err){\n                    return rej(err);\n                }\n                rsv(rsp);\n            })\n        }).then(function(feed){\n            if(feed.length < 1){\n                rsv_root(null);\n                return Q.reject(null);\n            }\n            fileNames = feed;\n            var q_all = feed.map(function(elem){\n                return Q.promise(function(rsv, rej){\n                    var filePath = folderPath + Path.sep + elem;\n                    fs.stat(filePath, function(err, rsp){\n                        if(err){\n                            return rej(err);\n                        }\n                        rsv(rsp);\n                    })\n                });\n            })\n            return Q.all(q_all);\n        }).then(function(feed){\n            var now = new Date();\n            feed.forEach(function(elem, i){\n                if(elem.birthtime instanceof Date){\n                    elem.life = hdlUtil.getTimeGap(elem.birthtime, now);\n                }\n                elem.fname = fileNames[i];\n                elem.isFile = elem.isFile();\n                elem.isDirectory = elem.isDirectory();\n                elem.isSymbolicLink = elem.isSymbolicLink();\n            });\n            if(filterHandler && filterHandler instanceof Function){\n                feed = feed.filter(filterHandler);\n            }\n            rsv_root(feed);\n        }, err => {\n            if(!err){\n                return;\n            }\n            rej_root(err);\n        })\n    })\n}\nmodule.exports.listStatsPromise = listStatsPromise;\n\n/**\n * Breadth-first search files\n */\nconst listFilteredFilesPromise = ({folderPath, filterHandler, isRecur}) => {\n    const recurHandler = function( rsv, rej, subFolderPath, filterHandler, stats = {depth: 0, results: [], sameLevel: [], nextLevel: []} ){\n        listStatsPromise(subFolderPath, a => a.isDirectory).then(feed => {\n            feed.forEach(a => {\n                stats.nextLevel.push(Path.resolve(subFolderPath, a.fname));\n            })\n            return listStatsPromise(subFolderPath, filterHandler);\n        }).then(feed => {\n            feed.forEach(a => {\n                a.absPath = Path.resolve(subFolderPath, a.fname);\n                a.depth = stats.depth;\n                stats.results.push(a);\n            })\n            if(stats.sameLevel.length > 0){\n                const nextFolderPath = stats.sameLevel.shift();\n                recurHandler( rsv, rej, nextFolderPath, filterHandler, stats );\n                return Q.reject(null);\n            }\n            if(stats.nextLevel.length < 1 || !isRecur){\n                rsv(stats.results);\n                return Q.reject(null);\n            }\n            stats.sameLevel = stats.nextLevel;\n            stats.nextLevel = [];\n            stats.depth = stats.depth + 1;\n            const nextFolderPath = stats.sameLevel.shift();\n            recurHandler( rsv, rej, nextFolderPath, filterHandler, stats );\n        }).done(null, err => {\n            if(!err){\n                return;\n            }\n            rej(err);\n        })\n    }\n    return Q.promise((rsvRoot, rejRoot) => {\n        recurHandler(rsvRoot, rejRoot, folderPath, filterHandler);\n    })\n}\nmodule.exports.listFilteredFilesPromise = listFilteredFilesPromise;\n\n/**\n * Recursively find out the modified files within limit hours and copy them to the temporary folder\n * @param {Number} hours select files modified within limit hours\n */\nmodule.exports.copyFilteredFilesPromise = function(folderPath, hours){\n    let tmpFolderPath, results;\n    return Q.promise((rsv, rej) => {\n        listFilteredFilesPromise({folderPath, filterHandler: a => a.isFile && a.mtime && hdlUtil.getTimeGap(a.mtime, new Date(), 'h') < 24, isRecur: true}).then(feed => {\n            const folderName = Path.basename(folderPath);\n            const parentFolderPath = Path.dirname(folderPath);\n            tmpFolderPath = Path.resolve(parentFolderPath, `.${folderName}`);\n            if(!fs.existsSync(tmpFolderPath)){\n                mkdirSync(tmpFolderPath);\n            }\n            results = feed.map(a => {\n                const b = {};\n                b.depth = a.depth;\n                b.absPath = a.absPath;\n                b.destPath = a.absPath.replace(folderPath, tmpFolderPath);\n                b.fname = a.fname;\n                return b;\n            })\n            const qAll = results.map(a => {\n                const dir = Path.dirname(a.destPath);\n                if(!fs.existsSync(dir)){\n                    mkdirSync(dir);\n                }\n                return copyFilePromise(a.absPath, a.destPath, {overwrite: 'Y'});\n            });\n            return Q.all(qAll);\n        }).then(() => {\n            const modFiles = results.map(a => a.absPath);\n            console.log(`modified files within ${hours}:`, modFiles);\n            rsv(tmpFolderPath)\n        }).done(null, err => {\n            console.error('copyFilteredFiles #74', err);\n            rej(err);\n        })\n    })\n}"],"file":"fsUtil.js"}